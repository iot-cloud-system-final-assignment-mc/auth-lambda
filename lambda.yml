AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  AuthLambda:
    Type: AWS::Serverless::Function
    DependsOn: AuthorizerAccessRole
    Properties:
      FunctionName: AuthLambda
      Runtime: nodejs14.x
      MemorySize: 1024
      Timeout: 15
      Handler: ./code/index.handler
      Role: !GetAtt AuthorizerExecutionRole.Arn

  AuthorizerExecutionRole:
    Type: AWS::IAM::Role     
    Properties:
      RoleName: !Sub iot-authorizer-execution-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy    
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess   
      Policies:      
        - PolicyName: !Sub iot-authorizer-execution-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cognito-idp:List*                                    
                Resource:
                  - !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*    
  AuthorizerAccessRole:
    Type: AWS::IAM::Role
    DependsOn: AuthorizerExecutionRole
    Properties:
      RoleName: !Sub iot-authorizer-access-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt 'AuthorizerExecutionRole.Arn'
            Action:
              - sts:AssumeRole       
      Policies:
        - PolicyName: !Sub iot-authorizer-access-role-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem     
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan     
                Resource:  
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
  